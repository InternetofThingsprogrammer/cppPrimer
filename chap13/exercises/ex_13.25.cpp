//练习 13.25：假定希望定义 StrBlob 的类值版本，而且希望继续使用 shared_ptr，这样物品们的 StrBlobPtr 就能够使用指向 vector 的 weak_ptr 了。
//你修改后的类将需要一个特拷贝构造函数和一个拷贝赋值运算符，但不需要析构函数。解释拷贝构造函数和拷贝赋值运算符必须要做什么。解释为什么不需要析构函数。

/*
*（1）拷贝构造函数利用 std::vector<std::string> 的拷贝构造函数以及实参的 data 成员指向的对象来初始化自己的 data 数据成员。
*（2）拷贝赋值运算符首先利用右侧运算对象的 data 成员创建一个指向 std::vector<std::string> 的指针，并且用右侧运算对象的 data 成员初始化它，
* 利用 shared_ptr 的 reset 操作将左侧运算对象的 data 成员指向新的指针。
*（3）因为动态资源都是通过智能指针管理的，所以不需要析构函数。
*/
